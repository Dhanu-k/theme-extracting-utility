{"ast":null,"code":"var _jsxFileName = \"/home/dhanshree/Documents/theme-extracting-utility/frontend/src/components/Output.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Output(_ref) {\n  let {\n    data\n  } = _ref;\n\n  if (JSON.stringify(data) === JSON.stringify({})) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please search for a company name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this);\n  }\n\n  let headers = ['Company name', 'Website Url', 'Logo', 'Primarily used colors', 'Pie chart'];\n  let table_headers = headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n    children: header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 51\n  }, this));\n  let no_of_colors = 2;\n  let primary_color_indices = data.counts_new.slice(0, no_of_colors).map(element => element[0]);\n  let primary_colors = [];\n\n  for (let i of primary_color_indices) {\n    primary_colors.push(data.center_colors[i]);\n  }\n\n  let column_values = primary_colors.map(primary_color => {\n    let color = 'rgba(' + Number(primary_color[0]) + ',' + Number(primary_color[1]) + ',' + Number(primary_color[2]) + ',' + Number(primary_color[3]) + ')';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"color-box\",\n        style: {\n          backgroundColor: 'rgba(' + primary_color[0] + ',' + primary_color[1] + ',' + primary_color[2] + ',' + primary_color[3] + ')'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n  let table_data = [];\n  table_data.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.company_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.website_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.website_logo,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex-vertical\",\n        children: column_values\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.pie_chart_uri,\n        alt: \"Pie Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: table_headers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Output;\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"sources":["/home/dhanshree/Documents/theme-extracting-utility/frontend/src/components/Output.js"],"names":["Output","data","JSON","stringify","headers","table_headers","map","header","no_of_colors","primary_color_indices","counts_new","slice","element","primary_colors","i","push","center_colors","column_values","primary_color","color","Number","backgroundColor","table_data","company_name","website_url","website_logo","pie_chart_uri"],"mappings":"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","sourcesContent":["function Output({data}) {\n\n    if (JSON.stringify(data)===JSON.stringify({})) {\n        return (\n            <div>\n                <h4>Please search for a company name</h4>\n            </div>\n        )\n    }\n    let headers = ['Company name', 'Website Url', 'Logo', 'Primarily used colors', 'Pie chart']\n    let table_headers = headers.map( (header) =>  <th>{header}</th>)\n\n    let no_of_colors = 2\n    let primary_color_indices = data.counts_new.slice(0, no_of_colors).map(element => element[0])\n    let primary_colors = []\n    for (let i of primary_color_indices) {\n        primary_colors.push(data.center_colors[i])\n    }\n\n    let column_values = primary_colors.map(primary_color => {\n        let color = 'rgba('+Number(primary_color[0])+','+Number(primary_color[1])+','+Number(primary_color[2])+','+Number(primary_color[3])+')'\n        return (\n            <div>\n                <span class='color-box' style={{backgroundColor:'rgba('+primary_color[0]+','+primary_color[1]+','+primary_color[2]+','+primary_color[3]+')'}}></span>\n                <span>{color}</span>\n            </div>\n        )\n    } )\n\n    let table_data = []\n    table_data.push(\n        <tr>\n            <td>{data.company_name}</td>\n            <td>{data.website_url}</td>\n            <td>\n                <img src={data.website_logo} alt='Logo' />\n            </td>\n            <td>\n                <div class='flex-vertical'>\n                    {column_values}\n                </div>\n            </td>\n            <td>\n                <img src={data.pie_chart_uri} alt='Pie Chart' />\n            </td>\n        </tr>\n    )\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        {table_headers}\n                    </tr>\n                </thead>\n                <tbody>\n                    {table_data}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Output"]},"metadata":{},"sourceType":"module"}